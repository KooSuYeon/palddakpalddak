[
    "import pandas as pd\nimport numpy as np\nimport missingno as msno\nimport matplotlib.pyplot as plt\nimport matplotlib.cm as cm\nfrom matplotlib.cm import ScalarMappable\nfrom sklearn import preprocessing\nimport seaborn as sns\nimport math\nimport json",
    "import platform\nfrom matplotlib import font_manager, rc\nif platform.system()=='Windows':\n    path = 'c:/Windows/Fonts/malgun.ttf'\n    font_name = font_manager.FontProperties(fname=path).get_name()\n    rc('font', family=font_name)",
    "shelter = pd.read_csv('./SampleData/전국무더위쉼터표준데이터.csv', encoding='euc-kr')",
    "shelter_data = shelter.copy()",
    "shelter_data.shape",
    "shelter_data.info()",
    "shelter_data.dtypes",
    "shelter.head()",
    "shelter.tail()",
    "shelter_data.sample(5)",
    "shelter_data.isnull()",
    "shelter_data.isnull().sum()",
    "msno.matrix(shelter_data, figsize=(10, 8))",
    "df_shelter = shelter_data.copy()",
    "df_shelter = df_shelter.drop([\"법정동명\", \"시설면적\", \"특이사항\", \"소재지지번주소\", \"관리기관명\", \"관리기관전화번호\", \"위도\", \"경도\", \"데이터기준일자\", \"제공기관코드\", \"제공기관명\"], axis=1)",
    "df_shelter.head()",
    "df_shelter.shape",
    "shelter_type_arr = df_shelter[\"쉼터유형구분\"].unique()",
    "is_open_nights = df_shelter[\"야간연장운영여부\"].unique()",
    "is_open_weekends = df_shelter[\"주말운영여부\"].unique()\nis_open_weekends",
    "is_accomodation_available = df_shelter[\"숙박가능여부\"].unique()\nis_accomodation_available",
    "df_shelter.loc[df_shelter[\"주말운영여부\"]=='y', \"주말운영여부\"] = \"Y\"",
    "df_shelter[\"광역시/도\"] = df_shelter[\"소재지도로명주소\"].str.split(\" \").str[0]",
    "region_arr = []\nregion_arr = df_shelter[\"광역시/도\"].unique()\nregion_arr = region_arr[~pd.isnull(region_arr)]\nregion_arr",
    "df_shelter = df_shelter[[\"쉼터명\", \"광역시/도\", \"쉼터유형구분\", \"운영시작일자\", \"운영종료일자\", \"이용가능인원수\", \"선풍기보유대수\", \"에어컨보유대수\", \"야간연장운영여부\", \"주말운영여부\", \"숙박가능여부\", \"소재지도로명주소\"]]",
    "df_shelter.sample(5)",
    "pd.pivot_table(df_shelter, index=[\"광역시/도\"], fill_value=0, margins=True)",
    "region_sum = pd.pivot_table(df_shelter, index=[\"광역시/도\"], aggfunc='sum', fill_value=0)\nregion_sum",
    "df_shelter.describe()",
    "df_shelter.describe(include=[np.object]).style.set_properties(subset=[\"소재지도로명주소\"], **{'width': '230px'})",
    "df_province = df_shelter[[\"쉼터명\", \"광역시/도\", \"쉼터유형구분\"]]",
    "df_province.shape",
    "df_province.sample(10)",
    "shelter_counts = {}\nfor region in region_arr:\n    shelter_counts[region] = len(df_shelter[df_shelter[\"광역시/도\"]==region])\n    \nshelter_counts",
    "df_region = pd.DataFrame(shelter_counts.items(), columns=[\"광역시/도\", \"무더위쉼터 수\"])\ndf_region.dropna(subset = [\"광역시/도\"], inplace=True)\ndf_region.set_index(\"광역시/도\", inplace=True)\ndf_region[\"무더위쉼터 수\"][\"서울특별시\"]",
    "my_cmap = plt.cm.get_cmap('cool_r')\ncolors = cm.cool_r(np.linspace(0, 1, len(df_region)))\ndf_region[\"무더위쉼터 수\"].sort_values().plot(kind='barh', grid=True, figsize=(10, 8), color=colors)\n\nx = df_region[\"무더위쉼터 수\"]\ny = df_region.index\n\ndata_color = [ y / max(x) for y in x]\n\nsm = ScalarMappable(cmap=my_cmap, norm=plt.Normalize(0, max(data_color)))\nsm.set_array([])\n\ncbar = plt.colorbar(sm)\ncbar.set_label('Color', rotation=270, labelpad = 25)\n\nfor i, v in enumerate(df_region[\"무더위쉼터 수\"].sort_values()):\n    plt.text(v + 3 , i, str(v), color='y', fontweight='bold', fontsize=12)\n    \nplt.xlim(0, 7000)\nplt.xlabel(\"무더위쉼터 수\")\nplt.ylabel(\"광역시/도\")\nplt.title(\"전국 무더위쉼터 현황\")",
    "shelter_financial_counts = df_shelter[df_shelter[\"쉼터유형구분\"]==\"금융기관\"][\"광역시/도\"].value_counts()\nshelter_ef_counts = df_shelter[df_shelter[\"쉼터유형구분\"]==\"노인시설\"][\"광역시/도\"].value_counts()\nshelter_cc_counts = df_shelter[df_shelter[\"쉼터유형구분\"]==\"주민센터\"][\"광역시/도\"].value_counts()\nshelter_etc_counts = df_shelter[df_shelter[\"쉼터유형구분\"]==\"기타\"][\"광역시/도\"].value_counts()\nshelter_rf_counts = df_shelter[df_shelter[\"쉼터유형구분\"]==\"종교시설\"][\"광역시/도\"].value_counts()\nshelter_wf_counts = df_shelter[df_shelter[\"쉼터유형구분\"]==\"복지회관\"][\"광역시/도\"].value_counts()\nshelter_ph_counts = df_shelter[df_shelter[\"쉼터유형구분\"]==\"보건소\"][\"광역시/도\"].value_counts()\nshelter_to1_counts = df_shelter[df_shelter[\"쉼터유형구분\"]==\"읍면동사무소\"][\"광역시/도\"].value_counts()\nshelter_th_counts = df_shelter[df_shelter[\"쉼터유형구분\"]==\"마을회관\"][\"광역시/도\"].value_counts()\nshelter_sh_counts = df_shelter[df_shelter[\"쉼터유형구분\"]==\"정자\"][\"광역시/도\"].value_counts()\nshelter_to2_counts = df_shelter[df_shelter[\"쉼터유형구분\"]==\"면동사무소\"][\"광역시/도\"].value_counts()",
    "shelter_rc_type = {} # 지역별 무더위쉼터 기관유형 수\n\nfor region in region_arr:\n    shelter_rc_type[region] = df_shelter[df_shelter[\"광역시/도\"]==region][\"쉼터유형구분\"].value_counts()",
    "shelter_tc_region = {} # 기관유형별 지역 개설 수\n\nfor shelter_type in shelter_type_arr:\n    shelter_tc_region[shelter_type] = df_shelter[df_shelter[\"쉼터유형구분\"]==shelter_type][\"광역시/도\"].value_counts()",
    "df_type = pd.DataFrame(data=[shelter_rc_type[\"서울특별시\"], shelter_rc_type[\"경상북도\"], shelter_rc_type[\"전라남도\"], shelter_rc_type[\"경기도\"], shelter_rc_type[\"대전광역시\"], shelter_rc_type[\"대구광역시\"], shelter_rc_type[\"충청북도\"], shelter_rc_type[\"충청남도\"], shelter_rc_type[\"전라북도\"], shelter_rc_type[\"인천광역시\"], shelter_rc_type[\"광주광역시\"], shelter_rc_type[\"제주특별자치도\"], shelter_rc_type[\"강원도\"], shelter_rc_type[\"부산광역시\"], shelter_rc_type[\"경상남도\"], shelter_rc_type[\"울산광역시\"], shelter_rc_type[\"세종특별자치시\"]], index=region_arr, columns=df_shelter[\"쉼터유형구분\"].unique())\ndf_type = df_type[[\"금융기관\", \"노인시설\", \"보건소\", \"복지회관\", \"읍면동사무소\", \"면동사무소\", \"주민센터\", \"마을회관\", \"종교시설\", \"정자\", \"기타\"]]\ndf_type = df_type.fillna(0)\ndf_type[\"총합\"] = df_region[\"무더위쉼터 수\"]",
    "type_sum = pd.pivot_table(df_type, index=region_arr, aggfunc='sum', fill_value=0, margins=True)\ntype_sum",
    "plt.figure(figsize=(20, 10))\nsns.heatmap(df_type, annot=True, fmt=\".1f\", cmap=\"coolwarm_r\", annot_kws={'size':13})\nplt.title(\"지역별 무더위쉼터 기관 비율\", fontsize=20)\nplt.show()",
    "col = df_type.columns\n\nx = df_type[col].values\nmin_max_scaler = preprocessing.MinMaxScaler()\n\nx_scaled = min_max_scaler.fit_transform(x.astype(float))\ndf_type_norm = pd.DataFrame(x_scaled, columns=col, index=df_type.index)\n\ndf_type_norm",
    "plt.figure(figsize=(20, 10))\nsns.heatmap(df_type_norm, annot=True, fmt=\".4f\", cmap=\"coolwarm_r\", annot_kws={'size':13})\nplt.title(\"지역별 무더위쉼터 기관 비율\", fontsize=20)\nplt.show()",
    "close_night = len(df_shelter.loc[df_shelter[\"야간연장운영여부\"]==is_open_nights[0]])\nopen_night = len(df_shelter.loc[df_shelter[\"야간연장운영여부\"]==is_open_nights[1]])\nno_info_night = len(df_shelter.loc[df_shelter[\"야간연장운영여부\"].isna()])\nopen_night_info = np.array([close_night, open_night, no_info_night])\n\nclose_night_close_weekend = len(df_shelter.loc[(df_shelter[\"야간연장운영여부\"]==is_open_nights[0]) & (df_shelter[\"주말운영여부\"]==is_open_weekends[0])])\nclose_night_open_weekend = len(df_shelter.loc[(df_shelter[\"야간연장운영여부\"]==is_open_nights[0]) & (df_shelter[\"주말운영여부\"]==is_open_weekends[1])])\nclose_night_no_info_weekend = len(df_shelter.loc[(df_shelter[\"야간연장운영여부\"]==is_open_nights[0]) & (df_shelter[\"주말운영여부\"].isna())])\nopen_night_close_weekend = len(df_shelter.loc[(df_shelter[\"야간연장운영여부\"]==is_open_nights[1]) & (df_shelter[\"주말운영여부\"]==is_open_weekends[0])])\nopen_night_open_weekend = len(df_shelter.loc[(df_shelter[\"야간연장운영여부\"]==is_open_nights[1]) & (df_shelter[\"주말운영여부\"]==is_open_weekends[1])])\nopen_night_no_info_weekend = len(df_shelter.loc[(df_shelter[\"야간연장운영여부\"]==is_open_nights[1]) & (df_shelter[\"주말운영여부\"].isna())])\nno_info_night_close_weekend = len(df_shelter.loc[(df_shelter[\"야간연장운영여부\"].isna()) & (df_shelter[\"주말운영여부\"]==is_open_weekends[0])])\nno_info_night_open_weekend = len(df_shelter.loc[(df_shelter[\"야간연장운영여부\"].isna()) & (df_shelter[\"주말운영여부\"]==is_open_weekends[1])])\nno_info_night_no_info_weekend = len(df_shelter.loc[(df_shelter[\"야간연장운영여부\"].isna()) & (df_shelter[\"주말운영여부\"].isna())])\nopen_weekend_info = np.array([close_night_close_weekend, close_night_open_weekend, close_night_no_info_weekend, open_night_close_weekend, open_night_open_weekend, open_night_no_info_weekend, no_info_night_close_weekend, no_info_night_open_weekend, no_info_night_no_info_weekend])\n\nprint(open_night_info)\nprint(open_weekend_info)",
    "close_weekend_accomodation_unavailable = len(df_shelter.loc[(df_shelter[\"주말운영여부\"]==is_open_weekends[0]) & (df_shelter[\"숙박가능여부\"]==is_accomodation_available[0])])\nclose_weekend_no_info_accomodation = len(df_shelter.loc[(df_shelter[\"주말운영여부\"]==is_open_weekends[0]) & (df_shelter[\"숙박가능여부\"].isna())])\nclose_weekend_accomodation_available = len(df_shelter.loc[(df_shelter[\"주말운영여부\"]==is_open_weekends[0]) & (df_shelter[\"숙박가능여부\"]==is_accomodation_available[2])])\nopen_weekend_accomodation_unavailable = len(df_shelter.loc[(df_shelter[\"주말운영여부\"]==is_open_weekends[1]) & (df_shelter[\"숙박가능여부\"]==is_accomodation_available[0])])\nopen_weekend_no_info_accomodation = len(df_shelter.loc[(df_shelter[\"주말운영여부\"]==is_open_weekends[1]) & (df_shelter[\"숙박가능여부\"].isna())])\nopen_weekend_accomodation_available = len(df_shelter.loc[(df_shelter[\"주말운영여부\"]==is_open_weekends[1]) & (df_shelter[\"숙박가능여부\"]==is_accomodation_available[2])])\nno_info_weekend_accomodation_unavailable = len(df_shelter.loc[(df_shelter[\"주말운영여부\"].isna()) & (df_shelter[\"숙박가능여부\"]==is_accomodation_available[0])])\nno_info_weekend_no_info_accomodation = len(df_shelter.loc[(df_shelter[\"주말운영여부\"].isna()) & (df_shelter[\"숙박가능여부\"].isna())])\nno_info_weekend_accomodation_available = len(df_shelter.loc[(df_shelter[\"주말운영여부\"].isna()) & (df_shelter[\"숙박가능여부\"]==is_accomodation_available[2])])\naccomodation_info = np.array([close_weekend_accomodation_unavailable, close_weekend_no_info_accomodation, close_weekend_accomodation_available, open_weekend_accomodation_unavailable, open_weekend_no_info_accomodation, open_weekend_accomodation_available, no_info_weekend_accomodation_unavailable, no_info_weekend_no_info_accomodation, no_info_weekend_accomodation_available])\naccomodation_info",
    "labels_weekend = ['휴무', '운영', '정보없음', '휴무', '운영', '정보없음', '휴무', '운영', '정보없음']\nlabels_night = ['미연장', '연장', '정보없음']\ncolors_weekend = ['#ffaaa5', '#d6e6f2', '#ffd3b6', '#ffaaa5', '#d6e6f2', '#ffd3b6', '#ffaaa5', '#d6e6f2', '#ffd3b6']\ncolors_night = ['#ffe2e2','#e0f9b5', '#fefdca']\nexplode_weekend = (0, 0, 0.3, 0.1, 0, 0, 0.6, 0.4, 0.1)\nexplode_night = (0, 0, 0)\n\nplt.figure(figsize=(4, 4))\n\nplt.title(\"전국 야간 연장 운영 비율 및 주말 운영 비율\", position=(0.55, 1.7), fontsize=20)\nplt.pie(open_night_info, autopct='%.1f%%', textprops={'fontsize':13}, colors=colors_weekend, startangle=90, shadow=True, pctdistance=0.85, radius=2.5)\nplt.pie(open_weekend_info, labels=labels_weekend, textprops={'fontsize':11}, colors=colors_night, startangle=90, shadow=True,labeldistance=0.7, explode=explode_weekend, radius=1.8)\nplt.legend(labels_night, prop={'size':12}, loc=\"center\", title=\"야간 운영\")\n\ncentre_circle = plt.Circle((0,0), 1, color='black', fc='white', linewidth=0)\nfig = plt.gcf()\nfig.gca().add_artist(centre_circle)\n\nplt.show()",
    "labels_weekend = ['휴무', '운영', '정보없음']\nlabels_accomodation = ['불가능', '정보없음', '가능', '불가능', '정보없음', '가능', '불가능', '정보없음', '가능']\ncolors_weekend = ['#ffaaa5', '#d6e6f2', '#ffd3b6']\ncolors_accomodation = ['#ffe2e2','#e0f9b5', '#fefdca', '#ffe2e2','#e0f9b5', '#fefdca', '#ffe2e2','#e0f9b5', '#fefdca']\nexplode_weekend = (0.05, 0.05, 0.05)\nexplode_accomodation = (0, 0, 0,0, 0, 0, 0, 0.2, 0.4)\n\nplt.figure(figsize=(4, 4))\n\nplt.title(\"전국 주말 운영 비율 및 숙박 가능 비율\", position=(0.55, 1.6), fontsize=20)\nplt.pie(open_weekend_info, autopct='%.1f%%', textprops={'fontsize':13}, colors=colors_weekend, startangle=90, shadow=True, pctdistance=0.85, radius=2.5)\nplt.pie(accomodation_info, labels=labels_accomodation, autopct='%.1f%%', textprops={'fontsize':11}, colors=colors_night, startangle=90, shadow=True, pctdistance=0.7, labeldistance=0.85, radius=1.8, explode=explode_accomodation)\nplt.legend(labels_weekend, prop={'size':12}, loc=\"center\", title=\"주말운영\")\n\ncentre_circle = plt.Circle((0,0), 1, color='black', fc='white', linewidth=0)\nfig = plt.gcf()\nfig.gca().add_artist(centre_circle)\n\nplt.show()",
    "df_shelter[\"개설연도\"] = df_shelter[\"운영시작일자\"].str.split(\"-\").str[0]",
    "df_shelter[\"개설연도\"].unique()",
    "start_2015 = len(df_shelter.loc[df_shelter[\"개설연도\"] == \"2015\"])\nstart_2016 = len(df_shelter.loc[df_shelter[\"개설연도\"] == \"2016\"])\nstart_2017 = len(df_shelter.loc[df_shelter[\"개설연도\"] == \"2017\"])\nstart_2018 = len(df_shelter.loc[df_shelter[\"개설연도\"] == \"2018\"])\nstart_2019 = len(df_shelter.loc[df_shelter[\"개설연도\"] == \"2019\"])\nstart_year = np.array([start_2015, start_2016, start_2017, start_2018, start_2019])\nstart_year",
    "plt.figure(figsize=(10,3))\n\nyear = ['2015년', '2016년', '2017년', '2018년', '2019년']\nplt.plot(year, start_year, \"c*--\", markersize = 10, label = \"쉼터 개설 수\")\nplt.legend(loc=4)\nplt.ylabel(\"쉼터 개설 수\")\nplt.title(\"연도별 무더위쉼터 개설 건수\")",
    "x = region_sum[\"이용가능인원수\"]\ny = region_sum[\"선풍기보유대수\"]\nz = region_sum[\"에어컨보유대수\"]",
    "fp1 = np.polyfit(x, y, 1)\nf1 = np.poly1d(fp1)\nfx = np.linspace(0, 280000, 1000)\n\nregion_sum[\"오차(선풍기)\"] = np.abs(y - f1(x))\n\ndf_sort1 = region_sum.sort_values(by='오차(선풍기)', ascending=False)\ndf_sort1.head()",
    "fp2 = np.polyfit(x, z, 1)\nf2 = np.poly1d(fp2)\nfz = np.linspace(0, 280000, 1000)\n\nregion_sum[\"오차(에어컨)\"] = np.abs(z - f2(x))\n\ndf_sort2 = region_sum.sort_values(by='오차(에어컨)', ascending=False)\ndf_sort2.head()",
    "plt.figure(figsize=(20, 15))\n\nplt.subplot(211)\nplt.scatter(x, y, c=region_sum[\"오차(선풍기)\"], s=50)\nplt.plot(fx, f1(fx), ls='dashed', lw=3, color='g')\n\nfor n in range(5):\n    plt.text(df_sort1[\"이용가능인원수\"][n]*1.02, df_sort1[\"선풍기보유대수\"][n]*0.98, df_sort1.index[n], fontsize=13)\n    \nplt.xlim(0, 280000)\nplt.ylim(0, 14500)\nplt.legend(['sample', '수용인원 대비 선풍기 수'], loc='upper left')\nplt.xlabel(\"이용가능 인원\")\nplt.ylabel(\"선풍기 보유 수\")\nplt.title(\"전국 무더위쉼터 수용인원 대비 선풍기 보유 대수\", fontsize=18)\n\nplt.colorbar()\nplt.grid()\n\nplt.subplot(212)\nplt.scatter(x, z, c=region_sum[\"오차(에어컨)\"], s=50)\nplt.plot(fz, f2(fz), ls='dashed', lw=3, color='m')\n\nfor n in range(5):\n    plt.text(df_sort2[\"이용가능인원수\"][n]*1.02, df_sort2[\"에어컨보유대수\"][n]*0.98, df_sort2.index[n], fontsize=13)\n\nplt.xlim(0, 280000)\nplt.ylim(0, 10000)\nplt.legend(['sample', '수용인원 대비 에어컨 수'], loc='upper left')\nplt.xlabel(\"이용가능 인원\")\nplt.ylabel(\"에어컨 보유 수\")\nplt.title(\"전국 무더위쉼터 수용인원 대비 에어컨 보유 대수\", fontsize=18)\n\nplt.colorbar()\nplt.grid()\nplt.show()",
    ""
]