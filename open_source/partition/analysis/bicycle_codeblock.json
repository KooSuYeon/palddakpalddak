[
    "import os\nos.getcwd()",
    "import matplotlib.pyplot as plt\nfrom matplotlib.cm import ScalarMappable",
    "import numpy as np",
    "import re",
    "import platform\nfrom matplotlib import font_manager, rc\nif platform.system()=='Windows':\n    path = 'c:/Windows/Fonts/malgun.ttf'\n    font_name = font_manager.FontProperties(fname=path).get_name()\n    rc('font', family=font_name)",
    "data_all = np.loadtxt('C:/dev/jhlee_data/대여소별 대여내역(2017년).csv', dtype='U', delimiter=',', encoding='UTF-8')",
    "data_all.shape",
    "data_all[1:5, :]",
    "data_all[0, :]",
    "rental_loc=[]\nrental_place=[]\nrental_date=[]\nnum_of_rental=[0]\ndata = data_all[1:, :]\ndata[:5, :]",
    "rental_loc = data_all[1:, :1]\nrental_loc = np.unique(rental_loc)\nprint(rental_loc)\nlen(rental_loc)",
    "rental_loc_list = data_all[1:, :1].tolist()\nnum_of_rental_list = data_all[1:, 3:].tolist()\nnum_of_rental = [ [] for x in range(len(rental_loc)) ]",
    "for i in range(len(rental_loc)): # 26개의 구\n    for j in range(len(rental_loc_list)): # 그룹명 전체\n        if rental_loc[i] == rental_loc_list[j][0]: # 같은 이름이면 대여 건수를 리스트에 추가\n            num_of_rental[i].append(int(num_of_rental_list[j][0]))\n            ",
    "num_of_rental_place = []\nfor i in range(len(rental_loc)):\n    num_of_rental_place.append(len(num_of_rental[i])) # 각 구에 있는 대여소 개수",
    "num_of_rental_place_arr = np.array(num_of_rental_place)\nnum_of_rental_place_arr",
    "plt.figure(figsize=(10, 8))\n\nx = num_of_rental_place\ny = rental_loc\n\ndata_color = [ y / max(x) for y in x]\n\nmy_cmap = plt.cm.get_cmap('summer_r')\ncolors = my_cmap(data_color)\nplt.barh(y, x, color=colors)\n\nsm = ScalarMappable(cmap=my_cmap, norm=plt.Normalize(0, max(data_color)))\nsm.set_array([])\n\ncbar = plt.colorbar(sm)\ncbar.set_label('Color', rotation=270, labelpad = 25)\n\nfor i, v in enumerate(x):\n    plt.text(v + 3 , i, str(v), color='m', fontweight='bold')\n    \nplt.xlim(0, 25000)\nplt.xlabel(\"대여소 수\")\nplt.ylabel(\"지역구\")\nplt.title(\"서울시 공공자전거 대여소 현황\")\nplt.grid()\nplt.show()",
    "num_of_rental_array = np.array(num_of_rental)\nsum_of_rental = []\nfor i in range(len(num_of_rental_array)):\n    sum_of_rental.append(np.array(num_of_rental_array[i]).sum())",
    "plt.figure(figsize=(20, 10))\n\nx = rental_loc\ny = sum_of_rental\n\ndata_color = [ x / max(y) for x in y]\n\nmy_cmap = plt.cm.get_cmap('viridis_r')\ncolors = my_cmap(data_color)\nbar = plt.bar(x, y, color=colors, width=0.6)\n\nsm = ScalarMappable(cmap=my_cmap, norm=plt.Normalize(0, max(data_color)))\nsm.set_array([])\n\ncbar = plt.colorbar(sm)\ncbar.set_label('Color', rotation=270, labelpad = 25)\n\nfor rect in bar:\n    height = rect.get_height()\n    plt.text(rect.get_x() + rect.get_width()/2.0, height, '%d' % int(height), color='m', fontweight='bold', ha='center', va='bottom')\n    \nplt.ylim(0, 800000)\nplt.xlabel(\"지역구\")\nplt.ylabel(\"대여건수\")\nplt.xticks(rotation=45)\nplt.title(\"서울시 공공자전거 연간 대여건수\")\nplt.grid()\nplt.show()",
    "x = num_of_rental_place\ny = sum_of_rental",
    "fp1 = np.polyfit(x, y, 1)\nfp1",
    "f1 = np.poly1d(fp1)\nfx = np.linspace(0, 28000, 100) # x축의 범위는 0부터 28000까지, 샘플 데이터 100개\n\nerror_range = np.abs(y - f1(x))\n\ndf_sort = np.sort(error_range)[::-1] # 오차 내림차순 정렬\ndf_sort[:5]",
    "plt.figure(figsize=(10,10))\n\nplt.scatter(x, y, c=error_range, s=50)\nplt.plot(fx, f1(fx), ls='dashed', lw=3, color='g')\n\nplt.xlim(0, 28000)\nplt.ylim(0, 800000)\nplt.legend(['sample', 'rental/rental_place'], loc='upper left')\nplt.xlabel(\"대여소 수\")\nplt.ylabel(\"연간 대여건수\")\nplt.title(\"서울시 공공자전거 지역별 대여소 수 대비 연간 대여 비율\")\nplt.grid()\nplt.show()",
    "mapo_id = 13",
    "rental_date = data_all[1:, 2:3]",
    "num_of_rental_mapo = [[]] * 12",
    "num_of_rental[mapo_id][2]",
    "jan = 0\nfeb = 0\nmar = 0\napr = 0\nmay = 0\njun = 0\njul = 0\naug = 0\nsep = 0\noct = 0\nnov = 0\ndec = 0",
    "k = 0\nfor i in range(len(rental_loc_list)): # 전체 내역에서\n    tmp = str(rental_date[i].tolist())\n    tmp_date = re.findall(\"\\d+\", tmp) # 정규식 사용하여 월(month) 정보 추출\n    date = list(map(int, tmp_date))\n    rental_month = date[0] # i번째 대여 달(month)\n    rental_location = rental_loc_list[i][0] # i번째 대여 그룹(00구)\n    if rental_location == '마포구' and rental_month == 1:\n        jan += num_of_rental[mapo_id][k] # 날짜에 따른 마포구 대여소별 대여 건수를 리스트에 추가     \n    elif rental_location == '마포구' and rental_month == 2:\n        feb += num_of_rental[mapo_id][k]\n    elif rental_location == '마포구' and rental_month == 3:\n        mar += num_of_rental[mapo_id][k]\n    elif rental_location == '마포구' and rental_month == 4:\n        apr += num_of_rental[mapo_id][k]\n    elif rental_location == '마포구' and rental_month == 5:\n        may += num_of_rental[mapo_id][k]\n    elif rental_location == '마포구' and rental_month == 6:\n        jun += num_of_rental[mapo_id][k]\n    elif rental_location == '마포구' and rental_month == 7:\n        jul += num_of_rental[mapo_id][k]\n    elif rental_location == '마포구' and rental_month == 8:\n        aug += num_of_rental[mapo_id][k]\n    elif rental_location == '마포구' and rental_month == 9:\n        sep += num_of_rental[mapo_id][k]\n    elif rental_location == '마포구' and rental_month == 10:\n        oct += num_of_rental[mapo_id][k]\n    elif rental_location == '마포구' and rental_month == 11:\n        nov += num_of_rental[mapo_id][k]\n    elif rental_location == '마포구' and rental_month == 12:\n        dec += num_of_rental[mapo_id][k]\n    k += 1",
    "jan",
    "sum_of_rental_mapo = []",
    "sum_of_rental_mapo.append(jan)\nsum_of_rental_mapo.append(feb)\nsum_of_rental_mapo.append(mar)\nsum_of_rental_mapo.append(apr)\nsum_of_rental_mapo.append(may)\nsum_of_rental_mapo.append(jun)\nsum_of_rental_mapo.append(jul)\nsum_of_rental_mapo.append(aug)\nsum_of_rental_mapo.append(sep)\nsum_of_rental_mapo.append(oct)\nsum_of_rental_mapo.append(nov)\nsum_of_rental_mapo.append(dec)\nsum_of_rental_mapo",
    "plt.figure(figsize=(10,3))\n\nmon = ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월']\nplt.plot(mon, sum_of_rental_mapo, \"c*--\", markersize = 10, label = \"대여건수\")\nplt.legend(loc=4)\nplt.ylabel(\"대여 건수\")\nplt.title(\"월별 마포구 대여 건수\")",
    "season_of_rental_mapo = []\nseason = ['봄', '여름', '가을', '겨울']\n\nspring = mar + apr + may\nsummer = jun + jul + aug\nautumn = sep + oct + nov\nwinter = dec + jan + feb\n\nseason_of_rental_mapo.append(spring)\nseason_of_rental_mapo.append(summer)\nseason_of_rental_mapo.append(autumn)\nseason_of_rental_mapo.append(winter)",
    "plt.pie(season_of_rental_mapo, labels=season, autopct='%.1f%%')",
    ""
]